// Generated from FilterLanguage.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
  ATN,
  ATNDeserializer,
  CharStream,
  DecisionState,
  DFA,
  Lexer,
  LexerATNSimulator,
  PredictionContextCache,
  Token
} from 'antlr4'
export default class FilterLanguageLexer extends Lexer {
  public static readonly T__0 = 1
  public static readonly T__1 = 2
  public static readonly T__2 = 3
  public static readonly T__3 = 4
  public static readonly T__4 = 5
  public static readonly T__5 = 6
  public static readonly T__6 = 7
  public static readonly T__7 = 8
  public static readonly SP = 9
  public static readonly NumberOrDate = 10
  public static readonly String = 11
  public static readonly CompareOp = 12
  public static readonly PARAM_NAME = 13
  public static readonly NameChar = 14
  public static readonly NameCharStart = 15
  public static readonly JSON_STRING = 16
  public static readonly TOKEN = 17
  public static readonly LPAR = 18
  public static readonly RPAR = 19
  public static readonly NUMBER = 20
  public static readonly ALPHA = 21
  public static readonly EOF = Token.EOF

  public static readonly channelNames: string[] = ['DEFAULT_TOKEN_CHANNEL', 'HIDDEN']
  public static readonly literalNames: (string | null)[] = [
    null,
    "'and'",
    "'or'",
    "'not'",
    "'_has:'",
    "':'",
    "'['",
    "']'",
    "'.'",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "'('",
    "')'"
  ]
  public static readonly symbolicNames: (string | null)[] = [
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    'SP',
    'NumberOrDate',
    'String',
    'CompareOp',
    'PARAM_NAME',
    'NameChar',
    'NameCharStart',
    'JSON_STRING',
    'TOKEN',
    'LPAR',
    'RPAR',
    'NUMBER',
    'ALPHA'
  ]
  public static readonly modeNames: string[] = ['DEFAULT_MODE']

  public static readonly ruleNames: string[] = [
    'T__0',
    'T__1',
    'T__2',
    'T__3',
    'T__4',
    'T__5',
    'T__6',
    'T__7',
    'SP',
    'NumberOrDate',
    'String',
    'CompareOp',
    'PARAM_NAME',
    'NameChar',
    'NameCharStart',
    'JSON_STRING',
    'TOKEN',
    'DateChar',
    'ESC',
    'UNICODE',
    'HEX',
    'DIGIT',
    'LPAR',
    'RPAR',
    'NUMBER',
    'ALPHA'
  ]

  constructor(input: CharStream) {
    super(input)
    this._interp = new LexerATNSimulator(
      this,
      FilterLanguageLexer._ATN,
      FilterLanguageLexer.DecisionsToDFA,
      new PredictionContextCache()
    )
  }

  public get grammarFileName(): string {
    return 'FilterLanguage.g4'
  }

  public get literalNames(): (string | null)[] {
    return FilterLanguageLexer.literalNames
  }
  public get symbolicNames(): (string | null)[] {
    return FilterLanguageLexer.symbolicNames
  }
  public get ruleNames(): string[] {
    return FilterLanguageLexer.ruleNames
  }

  public get serializedATN(): number[] {
    return FilterLanguageLexer._serializedATN
  }

  public get channelNames(): string[] {
    return FilterLanguageLexer.channelNames
  }

  public get modeNames(): string[] {
    return FilterLanguageLexer.modeNames
  }

  public static readonly _serializedATN: number[] = [
    4, 0, 21, 205, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7,
    7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2,
    16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24,
    7, 24, 2, 25, 7, 25, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
    1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 4, 8, 80, 8, 8, 11, 8, 12, 8, 81, 1, 8, 1, 8, 1, 9, 1,
    9, 5, 9, 88, 8, 9, 10, 9, 12, 9, 91, 9, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1,
    11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
    1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 3, 11, 133, 8, 11, 1, 12,
    1, 12, 5, 12, 137, 8, 12, 10, 12, 12, 12, 140, 9, 12, 1, 13, 1, 13, 1, 13, 3, 13, 145, 8, 13, 1, 14, 1, 14, 3, 14,
    149, 8, 14, 1, 15, 1, 15, 1, 15, 5, 15, 154, 8, 15, 10, 15, 12, 15, 157, 9, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16,
    4, 16, 164, 8, 16, 11, 16, 12, 16, 165, 1, 17, 1, 17, 3, 17, 170, 8, 17, 1, 18, 1, 18, 1, 18, 3, 18, 175, 8, 18, 1,
    19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 4, 24, 192, 8,
    24, 11, 24, 12, 24, 193, 1, 24, 1, 24, 4, 24, 198, 8, 24, 11, 24, 12, 24, 199, 3, 24, 202, 8, 24, 1, 25, 1, 25, 1,
    155, 0, 26, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29,
    15, 31, 16, 33, 17, 35, 0, 37, 0, 39, 0, 41, 0, 43, 0, 45, 18, 47, 19, 49, 20, 51, 21, 1, 0, 8, 3, 0, 9, 10, 13, 13,
    32, 32, 2, 0, 34, 34, 92, 92, 5, 0, 43, 43, 45, 46, 58, 58, 84, 84, 90, 90, 8, 0, 34, 34, 47, 47, 92, 92, 98, 98,
    102, 102, 110, 110, 114, 114, 116, 116, 3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 48, 57, 2, 0, 44, 44, 46, 46, 2, 0, 65,
    90, 97, 122, 233, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11,
    1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1,
    0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 45, 1, 0,
    0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 1, 53, 1, 0, 0, 0, 3, 57, 1, 0, 0, 0, 5, 60, 1, 0, 0,
    0, 7, 64, 1, 0, 0, 0, 9, 70, 1, 0, 0, 0, 11, 72, 1, 0, 0, 0, 13, 74, 1, 0, 0, 0, 15, 76, 1, 0, 0, 0, 17, 79, 1, 0,
    0, 0, 19, 85, 1, 0, 0, 0, 21, 92, 1, 0, 0, 0, 23, 132, 1, 0, 0, 0, 25, 134, 1, 0, 0, 0, 27, 144, 1, 0, 0, 0, 29,
    148, 1, 0, 0, 0, 31, 150, 1, 0, 0, 0, 33, 163, 1, 0, 0, 0, 35, 169, 1, 0, 0, 0, 37, 171, 1, 0, 0, 0, 39, 176, 1, 0,
    0, 0, 41, 182, 1, 0, 0, 0, 43, 184, 1, 0, 0, 0, 45, 186, 1, 0, 0, 0, 47, 188, 1, 0, 0, 0, 49, 191, 1, 0, 0, 0, 51,
    203, 1, 0, 0, 0, 53, 54, 5, 97, 0, 0, 54, 55, 5, 110, 0, 0, 55, 56, 5, 100, 0, 0, 56, 2, 1, 0, 0, 0, 57, 58, 5, 111,
    0, 0, 58, 59, 5, 114, 0, 0, 59, 4, 1, 0, 0, 0, 60, 61, 5, 110, 0, 0, 61, 62, 5, 111, 0, 0, 62, 63, 5, 116, 0, 0, 63,
    6, 1, 0, 0, 0, 64, 65, 5, 95, 0, 0, 65, 66, 5, 104, 0, 0, 66, 67, 5, 97, 0, 0, 67, 68, 5, 115, 0, 0, 68, 69, 5, 58,
    0, 0, 69, 8, 1, 0, 0, 0, 70, 71, 5, 58, 0, 0, 71, 10, 1, 0, 0, 0, 72, 73, 5, 91, 0, 0, 73, 12, 1, 0, 0, 0, 74, 75,
    5, 93, 0, 0, 75, 14, 1, 0, 0, 0, 76, 77, 5, 46, 0, 0, 77, 16, 1, 0, 0, 0, 78, 80, 7, 0, 0, 0, 79, 78, 1, 0, 0, 0,
    80, 81, 1, 0, 0, 0, 81, 79, 1, 0, 0, 0, 81, 82, 1, 0, 0, 0, 82, 83, 1, 0, 0, 0, 83, 84, 6, 8, 0, 0, 84, 18, 1, 0, 0,
    0, 85, 89, 3, 49, 24, 0, 86, 88, 3, 35, 17, 0, 87, 86, 1, 0, 0, 0, 88, 91, 1, 0, 0, 0, 89, 87, 1, 0, 0, 0, 89, 90,
    1, 0, 0, 0, 90, 20, 1, 0, 0, 0, 91, 89, 1, 0, 0, 0, 92, 93, 3, 31, 15, 0, 93, 22, 1, 0, 0, 0, 94, 95, 5, 101, 0, 0,
    95, 133, 5, 113, 0, 0, 96, 97, 5, 110, 0, 0, 97, 133, 5, 101, 0, 0, 98, 99, 5, 67, 0, 0, 99, 133, 5, 111, 0, 0, 100,
    101, 5, 115, 0, 0, 101, 133, 5, 119, 0, 0, 102, 103, 5, 101, 0, 0, 103, 133, 5, 119, 0, 0, 104, 105, 5, 103, 0, 0,
    105, 133, 5, 116, 0, 0, 106, 107, 5, 108, 0, 0, 107, 133, 5, 116, 0, 0, 108, 109, 5, 103, 0, 0, 109, 133, 5, 101, 0,
    0, 110, 111, 5, 108, 0, 0, 111, 133, 5, 101, 0, 0, 112, 113, 5, 97, 0, 0, 113, 133, 5, 112, 0, 0, 114, 115, 5, 115,
    0, 0, 115, 133, 5, 97, 0, 0, 116, 117, 5, 101, 0, 0, 117, 133, 5, 98, 0, 0, 118, 119, 5, 112, 0, 0, 119, 133, 5,
    114, 0, 0, 120, 121, 5, 112, 0, 0, 121, 133, 5, 111, 0, 0, 122, 123, 5, 115, 0, 0, 123, 133, 5, 115, 0, 0, 124, 125,
    5, 115, 0, 0, 125, 133, 5, 98, 0, 0, 126, 127, 5, 105, 0, 0, 127, 133, 5, 110, 0, 0, 128, 129, 5, 110, 0, 0, 129,
    133, 5, 105, 0, 0, 130, 131, 5, 114, 0, 0, 131, 133, 5, 101, 0, 0, 132, 94, 1, 0, 0, 0, 132, 96, 1, 0, 0, 0, 132,
    98, 1, 0, 0, 0, 132, 100, 1, 0, 0, 0, 132, 102, 1, 0, 0, 0, 132, 104, 1, 0, 0, 0, 132, 106, 1, 0, 0, 0, 132, 108, 1,
    0, 0, 0, 132, 110, 1, 0, 0, 0, 132, 112, 1, 0, 0, 0, 132, 114, 1, 0, 0, 0, 132, 116, 1, 0, 0, 0, 132, 118, 1, 0, 0,
    0, 132, 120, 1, 0, 0, 0, 132, 122, 1, 0, 0, 0, 132, 124, 1, 0, 0, 0, 132, 126, 1, 0, 0, 0, 132, 128, 1, 0, 0, 0,
    132, 130, 1, 0, 0, 0, 133, 24, 1, 0, 0, 0, 134, 138, 3, 29, 14, 0, 135, 137, 3, 27, 13, 0, 136, 135, 1, 0, 0, 0,
    137, 140, 1, 0, 0, 0, 138, 136, 1, 0, 0, 0, 138, 139, 1, 0, 0, 0, 139, 26, 1, 0, 0, 0, 140, 138, 1, 0, 0, 0, 141,
    145, 3, 29, 14, 0, 142, 145, 5, 45, 0, 0, 143, 145, 3, 43, 21, 0, 144, 141, 1, 0, 0, 0, 144, 142, 1, 0, 0, 0, 144,
    143, 1, 0, 0, 0, 145, 28, 1, 0, 0, 0, 146, 149, 5, 95, 0, 0, 147, 149, 3, 51, 25, 0, 148, 146, 1, 0, 0, 0, 148, 147,
    1, 0, 0, 0, 149, 30, 1, 0, 0, 0, 150, 155, 5, 34, 0, 0, 151, 154, 3, 37, 18, 0, 152, 154, 8, 1, 0, 0, 153, 151, 1,
    0, 0, 0, 153, 152, 1, 0, 0, 0, 154, 157, 1, 0, 0, 0, 155, 156, 1, 0, 0, 0, 155, 153, 1, 0, 0, 0, 156, 158, 1, 0, 0,
    0, 157, 155, 1, 0, 0, 0, 158, 159, 5, 34, 0, 0, 159, 32, 1, 0, 0, 0, 160, 164, 3, 51, 25, 0, 161, 164, 3, 43, 21, 0,
    162, 164, 3, 39, 19, 0, 163, 160, 1, 0, 0, 0, 163, 161, 1, 0, 0, 0, 163, 162, 1, 0, 0, 0, 164, 165, 1, 0, 0, 0, 165,
    163, 1, 0, 0, 0, 165, 166, 1, 0, 0, 0, 166, 34, 1, 0, 0, 0, 167, 170, 3, 49, 24, 0, 168, 170, 7, 2, 0, 0, 169, 167,
    1, 0, 0, 0, 169, 168, 1, 0, 0, 0, 170, 36, 1, 0, 0, 0, 171, 174, 5, 92, 0, 0, 172, 175, 7, 3, 0, 0, 173, 175, 3, 39,
    19, 0, 174, 172, 1, 0, 0, 0, 174, 173, 1, 0, 0, 0, 175, 38, 1, 0, 0, 0, 176, 177, 5, 117, 0, 0, 177, 178, 3, 41, 20,
    0, 178, 179, 3, 41, 20, 0, 179, 180, 3, 41, 20, 0, 180, 181, 3, 41, 20, 0, 181, 40, 1, 0, 0, 0, 182, 183, 7, 4, 0,
    0, 183, 42, 1, 0, 0, 0, 184, 185, 7, 5, 0, 0, 185, 44, 1, 0, 0, 0, 186, 187, 5, 40, 0, 0, 187, 46, 1, 0, 0, 0, 188,
    189, 5, 41, 0, 0, 189, 48, 1, 0, 0, 0, 190, 192, 3, 43, 21, 0, 191, 190, 1, 0, 0, 0, 192, 193, 1, 0, 0, 0, 193, 191,
    1, 0, 0, 0, 193, 194, 1, 0, 0, 0, 194, 201, 1, 0, 0, 0, 195, 197, 7, 6, 0, 0, 196, 198, 3, 43, 21, 0, 197, 196, 1,
    0, 0, 0, 198, 199, 1, 0, 0, 0, 199, 197, 1, 0, 0, 0, 199, 200, 1, 0, 0, 0, 200, 202, 1, 0, 0, 0, 201, 195, 1, 0, 0,
    0, 201, 202, 1, 0, 0, 0, 202, 50, 1, 0, 0, 0, 203, 204, 7, 7, 0, 0, 204, 52, 1, 0, 0, 0, 16, 0, 81, 89, 132, 138,
    144, 148, 153, 155, 163, 165, 169, 174, 193, 199, 201, 1, 6, 0, 0
  ]

  private static __ATN: ATN
  public static get _ATN(): ATN {
    if (!FilterLanguageLexer.__ATN) {
      FilterLanguageLexer.__ATN = new ATNDeserializer().deserialize(FilterLanguageLexer._serializedATN)
    }

    return FilterLanguageLexer.__ATN
  }

  static DecisionsToDFA = FilterLanguageLexer._ATN.decisionToState.map(
    (ds: DecisionState, index: number) => new DFA(ds, index)
  )
}
