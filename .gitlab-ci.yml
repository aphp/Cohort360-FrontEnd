image: $IMAGE_REPOSITORY_URL/node:$CI_COMMIT_BRANCH

default:
  tags:
    - $GITLAB_RUNNER_TAG

.default_rules:
  rules:
    - if: ($CI_COMMIT_BRANCH =~ $STANDARD_CD_BRANCHES || $CI_COMMIT_BRANCH =~ $PROTECTED_CD_BRANCHES) && $ONLY_RELEASE == null
    - when: never

.release_rules:
  rules:
    - if: ($CI_COMMIT_BRANCH =~ $STANDARD_CD_BRANCHES) && $ENABLE_RELEASE == "true"
    - if: ($CI_COMMIT_BRANCH =~ $PROTECTED_CD_BRANCHES) && $ENABLE_RELEASE == "true"
      when: manual
    - when: never

stages:
  - build
  - test
  - deploy
  - release

build:
  stage: build
  artifacts:
    paths:
      - build/
    expire_in: 1 week
  script:
    - name=${CI_COMMIT_BRANCH}_build_ENV  && cp ${!name} $CI_PROJECT_DIR/.env
    - rm package-lock.json
    - npm config set proxy http://$PROXY_URL
    - npm install
    - npm audit fix
    - CI=false npm run build
  rules:
    - !reference [.default_rules, rules]

test:
  stage: test
  script:
    - echo "Testing the code"
#    -
  rules:
    - !reference [.default_rules, rules]

deploy:
  image :
    name : $IMAGE_REPOSITORY_URL/kaniko-executor:$CI_COMMIT_BRANCH
    entrypoint : [ "" ]
  stage: deploy
  needs:
    - job: test
    - job: build
      artifacts: true
  script:
    - ENVIRONMENT=${CI_COMMIT_BRANCH/_/-}
    - sed -i "s/{{ENVIR}}/$CI_COMMIT_BRANCH/g" Dockerfile
    - REPO=$(echo $IMAGE_REPOSITORY_URL | sed "s/[^a-zA-Z0-9]/\\\\&/g") && sed -i "s/{{IMAGE_REPOSITORY_URL}}/$REPO/g" Dockerfile
    - echo "{\"auths\":{\"$IMAGE_REGISTRY\":{\"username\":\"$BOT_NAME\",\"password\":\"$BOT_TOKEN\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $IMAGE_REPOSITORY_URL/front:$CI_COMMIT_BRANCH
  rules:
    - !reference [.default_rules, rules]

release:
  image:
    name: $IMAGE_REPOSITORY_URL/alpine:$CI_COMMIT_BRANCH
    entrypoint: [ "" ]
  stage: release
  script:
    - bash .gitlab/release.sh
  rules:
    - !reference [.release_rules, rules]
